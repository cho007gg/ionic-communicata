{"version":3,"sources":["../../src/pages/home/home.ts","../../node_modules/@angular/core/esm5 lazy","../../src/pages/contact/contact.ts","../../src lazy","../../src/pages/about/about.ts","../../src/providers/images/images.ts","../../src/providers/preloader/preloader.ts","../../src/providers/sockets/sockets.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../ws (ignored)","../../src/app/app.component.ts","../../src/configurations/configuration.ts","../../src/pages/tabs/tabs.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, ViewChild } from '@angular/core';\nimport { Content, NavController, AlertController } from 'ionic-angular';\nimport { ImagesProvider } from '../../providers/images/images';\nimport { PreloaderProvider } from '../../providers/preloader/preloader';\nimport { SocketsProvider } from '../../providers/sockets/sockets';\nimport 'rxjs/add/operator/toPromise';\n\n\n@Component({\n  selector: 'page-home',\n  templateUrl: 'home.html'\n})\nexport class HomePage {\n  @ViewChild(Content) content: Content;\n\n\n  /**\n   * @name alias\n   * @type String\n   * @public\n   * @description              Stores the value for the user's entered alias\n   */\n  public alias: string;\n\n\n\n\n  /**\n   * @name handle\n   * @type String\n   * @public\n   * @description              Stores the value for the user's entered tagline\n   */\n  public handle: string;\n\n\n\n\n  /**\n   * @name location\n   * @type String\n   * @public\n   * @description              Stores the value for the user's entered location\n   */\n  public location: string;\n\n\n\n\n  /**\n   * @name displayRegisterAlias\n   * @type boolean\n   * @public\n   * @description              Determines which template items are displayed\n   */\n  public displayRegisterAlias: boolean = true;\n\n\n\n\n  /**\n   * @name messages\n   * @type object\n   * @public\n   * @description              Array that stores all chat data\n   */\n  public messages: Array<any> = [];\n\n\n\n\n  /**\n   * @name message\n   * @type object\n   * @public\n   * @description              Model for managing data for/from the input field\n   */\n  public message: any;\n\n\n\n\n  /**\n   * @name image\n   * @type object\n   * @public\n   * @description              Stores retrieved image file data\n   */\n  public image: any;\n\n\n\n\n  constructor(public navCtrl: NavController,\n    private _ALERT: AlertController,\n    private _IMAGES: ImagesProvider,\n    private _PRELOADER: PreloaderProvider,\n    private _SOCKET: SocketsProvider) { }\n\n\n\n\n  /**\n   * @public\n   * @method ionViewDidLoad\n   * @description    \tOn view loaded detect whether the network is able to be accessed\n   * @return {none}\n   */\n  ionViewDidLoad(): void {\n    this.detectNetworkConnection();\n  }\n\n\n\n\n  /**\n   * @public\n   * @method detectNetworkConnection\n   * @description    \tDetects whether the chat server can be contacted\n   * @return {none}\n   */\n  detectNetworkConnection(): void {\n    this._SOCKET\n      .pollServer()\n      .toPromise()\n      .then((data: any) => {\n        this.displayMessages();\n      })\n      .catch((error) => {\n        this.displayNetworkErrorWarning();\n      });\n  }\n\n\n\n\n  /**\n   * @public\n   * @method displayNetworkErrorWarning\n   * @description    \tDisplays an alert window informing the user that network connectivity\n   * \t\t\t\t\tcannot be detected\n   * @return {none}\n   */\n  displayNetworkErrorWarning(): void {\n    let alert: any = this._ALERT.create({\n      title: 'Network error',\n      subTitle: 'Please check your network connection and try again',\n      buttons: [\n        {\n          text: 'Retry',\n          handler: (data) => {\n            this.detectNetworkConnection();\n          }\n        }]\n\n    });\n    alert.present();\n  }\n\n\n\n  /**\n   * @public\n   * @method registerAlias\n   * @description    \t\t\tUses the Ionic AlertController to display a form with 3 input fields:\n   *                 \t\t\t1. alias - the user's chosen screen name\n   *\t\t\t\t\t\t\t2. handle - their tagline\n   *\t\t\t\t\t\t\t3. location - their location\n   *\n   *\t\t\t\t\t\t\tThis then registers the user for the temporary chat service allowing\n   *\t\t\t\t\t\t\tthem to post\n   * @return {none}\n   */\n  registerAlias(): void {\n    let alert: any = this._ALERT.create({\n      title: 'Please supply your screen name, handle and location',\n      inputs: [\n        {\n          type: 'text',\n          name: 'alias',\n          placeholder: 'I.e. Ming the merciless'\n        },\n        {\n          type: 'text',\n          name: 'handle',\n          placeholder: 'I.e. King of the universe'\n        },\n        {\n          type: 'text',\n          name: 'location',\n          placeholder: 'I.e. Here, there and everywhere'\n        }\n      ],\n      buttons: [\n        {\n          text: 'Cancel',\n          handler: (data) => {\n            console.log('Cancelled');\n          }\n        },\n        {\n          text: 'Save',\n          handler: (data) => {\n            this.alias = data.alias;\n            this.handle = data.handle;\n            this.location = data.location;\n            this.displayRegisterAlias = false;\n            this.registerForChatService(this.alias, this.handle, this.location);\n          }\n        }]\n\n    });\n    alert.present();\n  }\n\n\n\n\n  /**\n   * @public\n   * @method registerForChatService\n   * @param alias  \t{string}     \tThe user's screen name alias\n   * @param handle  \t{string}     \tThe user's tagline\n   * @param location\t{string}     \tThe user's location\n   * @description    \t\t\t\tRegister's the user with the current Socket.io chat session\n   * @return {none}\n   */\n  registerForChatService(alias: string,\n    handle: string,\n    location: string): void {\n    this._SOCKET.registerForChatService(alias, handle, location);\n  }\n\n\n\n\n  /**\n   * @public\n   * @method logOut\n   * @description    \t\t\tDisconnects the user from Socket.io chat service\n   *\t\t\t\t\t\t\tand resets the application state\n   * @return {none}\n   */\n  logOut(): void {\n    this._SOCKET.logOut();\n    this.alias = \"\";\n    this.handle = \"\";\n    this.location = \"\";\n    this.image = \"\";\n    this.message = \"\";\n    this.messages = [];\n    this.displayRegisterAlias = true;\n  }\n\n\n\n\n  /**\n   * @public\n   * @method displayMessages\n   * @description    \t\t\tRetrieves the posted message from the Socket.io chat service\n   *\t\t\t\t\t\t\tand publishes these to the template (courtesy of the Observable's\n   *\t\t\t\t\t\t\tsubscribe method acting as a listener for data changes)\n   * @return {none}\n   */\n  displayMessages(): void {\n    this._SOCKET.retrieveMessages()\n      .subscribe((message) => {\n\n        // Update the messages array\n        this.messages.push(message);\n\n\n        // Trigger the scroll API\n        setTimeout(() => {\n          this.scrollToLatestMessage();\n        }, 500);\n      });\n  }\n\n\n\n\n  /**\n   * @public\n   * @method addMessage\n   * @description    \t\t\tAdds a message to the Socket.io chat service and resets the model value\n   *\t\t\t\t\t\t\tused with the template's input field\n   * @return {none}\n   */\n  addMessage(): void {\n    this._SOCKET.addMessage(this.message);\n    this.message = '';\n  }\n\n\n\n\n  /**\n   * @public\n   * @method addImage\n   * @description    \t\t\tAdds an image to the Socket.io chat service and resets the model value\n   *\t\t\t\t\t\t\tused with the template's file input field\n   * @return {none}\n   */\n  addImage(): void {\n    this._SOCKET.addImage(this.image);\n    this.image = '';\n    this._PRELOADER.hidePreloader();\n  }\n\n\n\n\n  /**\n   * @public\n   * @method selectImage\n   * @param event  {any}     \tThe DOM event that we are capturing from the File input field\n   * @description    \t\t\tSelects an image to be uploaded to the Socket.io chat service\n   * @return {none}\n   */\n  selectImage(event: any): void {\n    this._IMAGES\n      .selectImage(event)\n      .subscribe((res) => {\n        this._PRELOADER.displayPreloader('Loading...');\n        this.image = res;\n        this.addImage();\n      });\n  }\n\n\n\n\n  /**\n   * @public\n   * @method exportMessages\n   * @description    \t\t\tPublishes a console log of all the current session's chat messages\n   * @return {none}\n   */\n  exportMessages(): void {\n    console.dir(this.messages);\n  }\n\n\n\n\n  /**\n   * @public\n   * @method scrollToLatestMessage\n   * @description    \t\t\tTriggers the scrollToBottom method of the Ionic Scroll API\n   * @return {none}\n   */\n  scrollToLatestMessage(): void {\n    this.content.scrollToBottom(300);\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 123;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/esm5 lazy\n// module id = 123\n// module chunks = 0","import { Component } from '@angular/core';\nimport { NavController } from 'ionic-angular';\n\n@Component({\n  selector: 'page-contact',\n  templateUrl: 'contact.html'\n})\nexport class ContactPage {\n\n  constructor(public navCtrl: NavController) {\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/contact/contact.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 166;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 166\n// module chunks = 0","import { Component } from '@angular/core';\nimport { NavController } from 'ionic-angular';\n\n@Component({\n  selector: 'page-about',\n  templateUrl: 'about.html'\n})\nexport class AboutPage {\n\n  constructor(public navCtrl: NavController) {\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/about/about.ts","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\n\n\n\n@Injectable()\nexport class ImagesProvider {\n\n\n\n   /**\n    * @name _READER\n    * @type object\n    * @private\n    * @description              Creates a FileReader API object\n    */\n   private _READER : any  \t\t\t=\tnew FileReader();\n\n\n\n\n   constructor(public http: HttpClient)\n   { }\n\n\n\n\n   /**\n    * @public\n    * @method selectImage\n    * @param event  {any}     \tThe DOM event that we are capturing from the File input field\n    * @description    \t\t\tUses the FileReader API to capture the input field event, retrieve\n    *                 \t\t\tthe selected image and return that as a base64 data URL courtesy of\n    *\t\t\t\t\t\t\tan Observable\n    * @return {Observable}\n    */\n   selectImage(event) : Observable<any>\n   {\n      return Observable.create((observer) =>\n      {\n         this.handleImageSelection(event)\n         .subscribe((res) =>\n         {\n            observer.next(res);\n            observer.complete();\n         });\n      });\n   }\n\n\n\n\n   /**\n    * @public\n    * @method handleImageSelection\n    * @param event  {any}     \tThe DOM event that we are capturing from the File input field\n    * @description    \t\t\tUses the FileReader API to capture the input field event, retrieve\n    *                 \t\t\tthe selected image and return that as a base64 data URL courtesy of\n    *\t\t\t\t\t\t\tan Observable\n    * @return {Observable}\n    */\n   handleImageSelection(event : any) : Observable<any>\n   {\n      let file \t\t: any \t\t= event.target.files[0];\n\n      this._READER.readAsDataURL(file);\n      return Observable.create((observer) =>\n      {\n         this._READER.onloadend = () =>\n         {\n            observer.next(this._READER.result);\n            observer.complete();\n         }\n      });\n   }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/images/images.ts","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { LoadingController } from 'ionic-angular';\n\n/*\n  Generated class for the PreloaderProvider provider.\n\n  See https://angular.io/guide/dependency-injection for more info on providers\n  and Angular DI.\n*/\n@Injectable()\nexport class PreloaderProvider {\n\n  /**\n  * Reference for storing loading bar object\n  */\n  private loading: any;\n\n  constructor(public http: HttpClient,\n    public loadingCtrl: LoadingController) {\n    console.log('Hello PreloaderProvider Provider');\n  }\n\n  /**\n    *\n    * Display an animated loading bar\n    *\n    * @public\n    * @method displayPreloader\n    * @param message    {String}        Message to be displayed with the loading bar\n    * @return {none}\n    */\n  displayPreloader(message: string): void {\n    this.loading = this.loadingCtrl.create({\n      content: message\n    });\n\n    this.loading.present();\n  }\n\n  /**\n   *\n   * Hide animated loading bar\n   *\n   * @public\n   * @method hidePreloader\n   * @return {none}\n   */\n  hidePreloader(): void {\n    this.loading.dismiss();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/preloader/preloader.ts","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Socket } from 'ng-socket-io';\n\n\n\n@Injectable()\nexport class SocketsProvider {\n\n\n  /**\n   * @name _SERVER\n   * @type object\n   * @private\n   * @description              The URI where the Socket.io server is running\n   */\n  private _SERVER: string = 'http://175.204.59.204:3000';\n\n\n\n  constructor(public _HTTP: HttpClient,\n    private _SOCKET: Socket) { }\n\n\n\n\n  /**\n   * @public\n   * @method pollServer\n   * @description    \t\t\tUse Angular Http call to determine if server address is reachable\n   * @return {Observable}\n   */\n  pollServer(): Observable<any> {\n    return this._HTTP\n      .get(this._SERVER);\n  }\n\n\n\n\n  /**\n   * @public\n   * @method registerForChatService\n   * @param alias  \t{string}     \tThe user's screen name alias\n   * @param handle  \t{string}     \tThe user's tagline\n   * @param location\t{string}     \tThe user's location\n   * @description    \t\t\t\t\tRegister's the user with the current Socket.io chat session\n   * @return {none}\n   */\n  registerForChatService(alias: string,\n    handle: string,\n    location: string): void {\n    this._SOCKET.connect();\n    this._SOCKET.emit('set-alias', { alias: alias, handle: handle, location: location });\n  }\n\n\n\n\n  /**\n   * @public\n   * @method retrieveMessages\n   * @description    \t\t\t\t\tRetrieves the messages currently active in the session\n   * @return {Observable}\n   */\n  retrieveMessages(): Observable<any> {\n    return new Observable((observer) => {\n      this._SOCKET.on('message', (data) => {\n        observer.next(data);\n      });\n    });\n  }\n\n\n\n\n  /**\n   * @public\n   * @method addMessage\n   * @description    \t\t\t\t\tAdds a message to the socket.io session\n   * @return {none}\n   */\n  addMessage(message: string): void {\n    // Use the emit method of the Socket.io library to broadcast a custom event\n    // ('add-message') to the service - this will then add the supplied data to\n    // the current session message stream\n    this._SOCKET.emit('add-message', { message: message });\n  }\n\n\n\n\n  /**\n   * @public\n   * @method addImage\n   * @description    \t\t\t\t\tAdds an image to the socket.io session\n   * @return {none}\n   */\n  addImage(image: string): void {\n    // Use the emit method of the Socket.io library to broadcast a custom event\n    // ('add-image') to the service - this will then add the supplied data to\n    // the current session message stream\n    this._SOCKET.emit('add-image', { image: image });\n  }\n\n\n\n\n  /**\n   * @public\n   * @method logOut\n   * @description    \t\t\t\t\tCloses the current user's socket.io session\n   * @return {none}\n   */\n  logOut(): void {\n    this._SOCKET.disconnect();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/sockets/sockets.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { ContactPage } from './../pages/contact/contact';\nimport { AboutPage } from './../pages/about/about';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SocketIoModule } from 'ng-socket-io';\n\nimport { MyApp } from './app.component';\nimport { HomePage } from '../pages/home/home';\nimport { SocketsProvider } from '../providers/sockets/sockets';\nimport { config } from '../configurations/configuration';\nimport { ImagesProvider } from '../providers/images/images';\nimport { PreloaderProvider } from '../providers/preloader/preloader';\nimport { TabsPage } from '../pages/tabs/tabs';\n\n@NgModule({\n  declarations: [\n    MyApp,\n    HomePage,\n    AboutPage,\n    TabsPage,\n    ContactPage\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    IonicModule.forRoot(MyApp),\n    SocketIoModule.forRoot(config.io)\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n    HomePage,\n    AboutPage,\n    TabsPage,\n    ContactPage\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    {provide: ErrorHandler, useClass: IonicErrorHandler},\n    SocketsProvider,\n    ImagesProvider,\n    PreloaderProvider\n  ]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// ws (ignored)\n// module id = 324\n// module chunks = 0","import { HomePage } from './../pages/home/home';\nimport { Component } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n\nimport { TabsPage } from '../pages/tabs/tabs';\n\n@Component({\n  templateUrl: 'app.html'\n})\nexport class MyApp {\n  rootPage:any = HomePage;\n\n  constructor(platform: Platform, statusBar: StatusBar, splashScreen: SplashScreen) {\n    platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      statusBar.styleDefault();\n      splashScreen.hide();\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","export const config = {\n  io : {\n     url \t\t\t\t: \"http://175.204.59.204:3000\",\n     options \t\t\t: {}\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/configurations/configuration.ts","import { Component } from '@angular/core';\n\nimport { AboutPage } from '../about/about';\nimport { ContactPage } from '../contact/contact';\nimport { HomePage } from '../home/home';\n\n@Component({\n  templateUrl: 'tabs.html'\n})\nexport class TabsPage {\n\n  tab1Root = HomePage;\n  tab2Root = AboutPage;\n  tab3Root = ContactPage;\n\n  constructor() {\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/tabs/tabs.ts"],"sourceRoot":""}